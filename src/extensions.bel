(set natives nil)

(set spec [cdr (get _ natives)])

(with (doc (list (uvar) "This function is implemented natively in Chime.")
       eval [(macro () _)]
       hook (car:1:3 time))
  (each nm native-ops
    (let op (eval nm)
      (set natives (put nm op natives))
      (let clo `(lit clo ((,hook . ,nm) ,doc) () ())
        (set (eval nm)
          (if (isa!mac op)
              `(lit mac ,clo)
              clo))))))

(def tabref2 (tab key (o default))
   (ifwhere (cdr:tabloc tab key) (tabref tab key)))

(vir tab (f args)
  `(tabref2 ,f ,@args))
